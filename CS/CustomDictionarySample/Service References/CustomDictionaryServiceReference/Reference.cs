//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.ServiceReference, version 4.0.50401.0
// 
namespace CustomDictionarySample.CustomDictionaryServiceReference {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="CustomDictionaryServiceReference.ICustomDictionaryService")]
    public interface ICustomDictionaryService {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ICustomDictionaryService/DoWork", ReplyAction="http://tempuri.org/ICustomDictionaryService/DoWorkResponse")]
        System.IAsyncResult BeginDoWork(System.AsyncCallback callback, object asyncState);
        
        void EndDoWork(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ICustomDictionaryService/LoadCustomDictionary", ReplyAction="http://tempuri.org/ICustomDictionaryService/LoadCustomDictionaryResponse")]
        System.IAsyncResult BeginLoadCustomDictionary(System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<string> EndLoadCustomDictionary(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ICustomDictionaryService/SaveCustomDictionary", ReplyAction="http://tempuri.org/ICustomDictionaryService/SaveCustomDictionaryResponse")]
        System.IAsyncResult BeginSaveCustomDictionary(System.Collections.ObjectModel.ObservableCollection<string> words, System.AsyncCallback callback, object asyncState);
        
        void EndSaveCustomDictionary(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICustomDictionaryServiceChannel : CustomDictionarySample.CustomDictionaryServiceReference.ICustomDictionaryService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class LoadCustomDictionaryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public LoadCustomDictionaryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<string> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<string>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CustomDictionaryServiceClient : System.ServiceModel.ClientBase<CustomDictionarySample.CustomDictionaryServiceReference.ICustomDictionaryService>, CustomDictionarySample.CustomDictionaryServiceReference.ICustomDictionaryService {
        
        private BeginOperationDelegate onBeginDoWorkDelegate;
        
        private EndOperationDelegate onEndDoWorkDelegate;
        
        private System.Threading.SendOrPostCallback onDoWorkCompletedDelegate;
        
        private BeginOperationDelegate onBeginLoadCustomDictionaryDelegate;
        
        private EndOperationDelegate onEndLoadCustomDictionaryDelegate;
        
        private System.Threading.SendOrPostCallback onLoadCustomDictionaryCompletedDelegate;
        
        private BeginOperationDelegate onBeginSaveCustomDictionaryDelegate;
        
        private EndOperationDelegate onEndSaveCustomDictionaryDelegate;
        
        private System.Threading.SendOrPostCallback onSaveCustomDictionaryCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public CustomDictionaryServiceClient() {
        }
        
        public CustomDictionaryServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CustomDictionaryServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CustomDictionaryServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CustomDictionaryServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> DoWorkCompleted;
        
        public event System.EventHandler<LoadCustomDictionaryCompletedEventArgs> LoadCustomDictionaryCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> SaveCustomDictionaryCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult CustomDictionarySample.CustomDictionaryServiceReference.ICustomDictionaryService.BeginDoWork(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDoWork(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void CustomDictionarySample.CustomDictionaryServiceReference.ICustomDictionaryService.EndDoWork(System.IAsyncResult result) {
            base.Channel.EndDoWork(result);
        }
        
        private System.IAsyncResult OnBeginDoWork(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((CustomDictionarySample.CustomDictionaryServiceReference.ICustomDictionaryService)(this)).BeginDoWork(callback, asyncState);
        }
        
        private object[] OnEndDoWork(System.IAsyncResult result) {
            ((CustomDictionarySample.CustomDictionaryServiceReference.ICustomDictionaryService)(this)).EndDoWork(result);
            return null;
        }
        
        private void OnDoWorkCompleted(object state) {
            if ((this.DoWorkCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DoWorkCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DoWorkAsync() {
            this.DoWorkAsync(null);
        }
        
        public void DoWorkAsync(object userState) {
            if ((this.onBeginDoWorkDelegate == null)) {
                this.onBeginDoWorkDelegate = new BeginOperationDelegate(this.OnBeginDoWork);
            }
            if ((this.onEndDoWorkDelegate == null)) {
                this.onEndDoWorkDelegate = new EndOperationDelegate(this.OnEndDoWork);
            }
            if ((this.onDoWorkCompletedDelegate == null)) {
                this.onDoWorkCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDoWorkCompleted);
            }
            base.InvokeAsync(this.onBeginDoWorkDelegate, null, this.onEndDoWorkDelegate, this.onDoWorkCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult CustomDictionarySample.CustomDictionaryServiceReference.ICustomDictionaryService.BeginLoadCustomDictionary(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginLoadCustomDictionary(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<string> CustomDictionarySample.CustomDictionaryServiceReference.ICustomDictionaryService.EndLoadCustomDictionary(System.IAsyncResult result) {
            return base.Channel.EndLoadCustomDictionary(result);
        }
        
        private System.IAsyncResult OnBeginLoadCustomDictionary(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((CustomDictionarySample.CustomDictionaryServiceReference.ICustomDictionaryService)(this)).BeginLoadCustomDictionary(callback, asyncState);
        }
        
        private object[] OnEndLoadCustomDictionary(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<string> retVal = ((CustomDictionarySample.CustomDictionaryServiceReference.ICustomDictionaryService)(this)).EndLoadCustomDictionary(result);
            return new object[] {
                    retVal};
        }
        
        private void OnLoadCustomDictionaryCompleted(object state) {
            if ((this.LoadCustomDictionaryCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.LoadCustomDictionaryCompleted(this, new LoadCustomDictionaryCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void LoadCustomDictionaryAsync() {
            this.LoadCustomDictionaryAsync(null);
        }
        
        public void LoadCustomDictionaryAsync(object userState) {
            if ((this.onBeginLoadCustomDictionaryDelegate == null)) {
                this.onBeginLoadCustomDictionaryDelegate = new BeginOperationDelegate(this.OnBeginLoadCustomDictionary);
            }
            if ((this.onEndLoadCustomDictionaryDelegate == null)) {
                this.onEndLoadCustomDictionaryDelegate = new EndOperationDelegate(this.OnEndLoadCustomDictionary);
            }
            if ((this.onLoadCustomDictionaryCompletedDelegate == null)) {
                this.onLoadCustomDictionaryCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnLoadCustomDictionaryCompleted);
            }
            base.InvokeAsync(this.onBeginLoadCustomDictionaryDelegate, null, this.onEndLoadCustomDictionaryDelegate, this.onLoadCustomDictionaryCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult CustomDictionarySample.CustomDictionaryServiceReference.ICustomDictionaryService.BeginSaveCustomDictionary(System.Collections.ObjectModel.ObservableCollection<string> words, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSaveCustomDictionary(words, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void CustomDictionarySample.CustomDictionaryServiceReference.ICustomDictionaryService.EndSaveCustomDictionary(System.IAsyncResult result) {
            base.Channel.EndSaveCustomDictionary(result);
        }
        
        private System.IAsyncResult OnBeginSaveCustomDictionary(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Collections.ObjectModel.ObservableCollection<string> words = ((System.Collections.ObjectModel.ObservableCollection<string>)(inValues[0]));
            return ((CustomDictionarySample.CustomDictionaryServiceReference.ICustomDictionaryService)(this)).BeginSaveCustomDictionary(words, callback, asyncState);
        }
        
        private object[] OnEndSaveCustomDictionary(System.IAsyncResult result) {
            ((CustomDictionarySample.CustomDictionaryServiceReference.ICustomDictionaryService)(this)).EndSaveCustomDictionary(result);
            return null;
        }
        
        private void OnSaveCustomDictionaryCompleted(object state) {
            if ((this.SaveCustomDictionaryCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SaveCustomDictionaryCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SaveCustomDictionaryAsync(System.Collections.ObjectModel.ObservableCollection<string> words) {
            this.SaveCustomDictionaryAsync(words, null);
        }
        
        public void SaveCustomDictionaryAsync(System.Collections.ObjectModel.ObservableCollection<string> words, object userState) {
            if ((this.onBeginSaveCustomDictionaryDelegate == null)) {
                this.onBeginSaveCustomDictionaryDelegate = new BeginOperationDelegate(this.OnBeginSaveCustomDictionary);
            }
            if ((this.onEndSaveCustomDictionaryDelegate == null)) {
                this.onEndSaveCustomDictionaryDelegate = new EndOperationDelegate(this.OnEndSaveCustomDictionary);
            }
            if ((this.onSaveCustomDictionaryCompletedDelegate == null)) {
                this.onSaveCustomDictionaryCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSaveCustomDictionaryCompleted);
            }
            base.InvokeAsync(this.onBeginSaveCustomDictionaryDelegate, new object[] {
                        words}, this.onEndSaveCustomDictionaryDelegate, this.onSaveCustomDictionaryCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override CustomDictionarySample.CustomDictionaryServiceReference.ICustomDictionaryService CreateChannel() {
            return new CustomDictionaryServiceClientChannel(this);
        }
        
        private class CustomDictionaryServiceClientChannel : ChannelBase<CustomDictionarySample.CustomDictionaryServiceReference.ICustomDictionaryService>, CustomDictionarySample.CustomDictionaryServiceReference.ICustomDictionaryService {
            
            public CustomDictionaryServiceClientChannel(System.ServiceModel.ClientBase<CustomDictionarySample.CustomDictionaryServiceReference.ICustomDictionaryService> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginDoWork(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("DoWork", _args, callback, asyncState);
                return _result;
            }
            
            public void EndDoWork(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("DoWork", _args, result);
            }
            
            public System.IAsyncResult BeginLoadCustomDictionary(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("LoadCustomDictionary", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<string> EndLoadCustomDictionary(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<string> _result = ((System.Collections.ObjectModel.ObservableCollection<string>)(base.EndInvoke("LoadCustomDictionary", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginSaveCustomDictionary(System.Collections.ObjectModel.ObservableCollection<string> words, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = words;
                System.IAsyncResult _result = base.BeginInvoke("SaveCustomDictionary", _args, callback, asyncState);
                return _result;
            }
            
            public void EndSaveCustomDictionary(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("SaveCustomDictionary", _args, result);
            }
        }
    }
}
